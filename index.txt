<!DOCTYPE html>
<html>

<head>
	<link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
	<meta charset=UTF-8 />
	<link rel="stylesheet" type="text/css" href="css/transition.css"/>
 
  <link rel="stylesheet" type="text/css" href="css/styles.css"/>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.10.4/gsap.min.js"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
	<link rel="stylesheet" type="text/css" href="css/navbar.css" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://unpkg.com/swup@latest/dist/swup.min.js"></script>  
  <script src="https://unpkg.com/swup@latest/dist/swup.min.js"></script>  
  <script defer src="transition.js"></script>

	<style>
	@import url('https://fonts.googleapis.com/css2?family=Staatliches&display=swap');
	</style>
	<style>
	@import url('https://fonts.googleapis.com/css2?family=Baloo+2:wght@500&display=swap');
	</style>
	<link href="https://fonts.googleapis.com/css?family=Raleway&display=swap" rel="stylesheet">
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
	<link href='https://fonts.googleapis.com/css?family=Lato:300,400,700' rel='stylesheet' type='text/css'>
	<link rel="icon" type="image/x-icon" href="download.png">
	<title>Justin Loo's Website</title>
</head>

<body>

  <div class = "transition transition-1 is-active"></div>
	<nav class="navbar" data-aos="fade-down" data-aos-duration="1000">
		<div class="content">
			<div class="logo"> <a class="mainlogo">JUSTIN LOO</a> </div>
			<ul class="menu-list">
				<div class="icon cancel-btn"> <i class="fas fa-times"></i> </div>
				<li class = "is-active"><a class="menutext" href="index.html">HOME</a></li>
				<li><a class="menutext" href="about.html">ABOUT</a></li>
				<li><a class="menutext" href="contact.html">CONTACT</a></li>
				<li><a class="menutext" href="#">FEATURES</a></li>
			</ul>
			<div class="icon menu-btn"> <i class="fas fa-bars"></i> </div>
		</div>
	</nav>

 
	
  
  	<div class="parent">
  		<section id="home">
  			<div class="text-box" data-aos="zoom-in-down" data-aos-duration="2000">
  				<div class="heading">Welcome to my website</div>
  				<div class="button-wrapper"> <a class="button" href="about.html">About Me</a> </div>
  			</div>
  		</section>
  	</div>

  

            
	<script>
	function play() {
		var audio = document.getElementById("audio");
		audio.play();
	}
	</script>
	<script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
	<script>
	AOS.init();
	</script>
	<script>
	const body = document.querySelector("body");
	const navbar = document.querySelector(".navbar");
	const menuBtn = document.querySelector(".menu-btn");
	const cancelBtn = document.querySelector(".cancel-btn");
	menuBtn.onclick = () => {
		navbar.classList.add("show");
		menuBtn.classList.add("hide");
		body.classList.add("disabled");
	}
	cancelBtn.onclick = () => {
		body.classList.remove("disabled");
		navbar.classList.remove("show");
		menuBtn.classList.remove("hide");
	}
	window.onscroll = () => {
		this.scrollY > 20 ? navbar.classList.add("sticky") : navbar.classList.remove("sticky");
	}
	</script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r79/three.min.js"></script>
	<script>
	let scene, camera, renderer, stars, starGeo;

	function init() {
		scene = new THREE.Scene();
		camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);
		camera.position.z = 1;
		camera.rotation.x = Math.PI / 2;
		renderer = new THREE.WebGLRenderer({
			alpha: true
		});
		renderer.setClearColor(0xffffff, 0);
		scene.background = null;
		renderer.setSize(window.innerWidth, window.innerHeight);
		document.body.appendChild(renderer.domElement);
		starGeo = new THREE.Geometry();
		for(let i = 0; i < 6000; i++) {
			star = new THREE.Vector3(Math.random() * 600 - 300, Math.random() * 600 - 300, Math.random() * 600 - 300);
			star.velocity = 0;
			star.acceleration = 0.02;
			starGeo.vertices.push(star);
		}
		let sprite = new THREE.TextureLoader().load('./images/star/star.png');
		let starMaterial = new THREE.PointsMaterial({
			color: 0xaaaaaa,
			size: 0.7,
			map: sprite
		});
		stars = new THREE.Points(starGeo, starMaterial);
		scene.add(stars);
		window.addEventListener("resize", onWindowResize, false);
		animate();
	}

	function onWindowResize() {
		camera.aspect = window.innerWidth / window.innerHeight;
		camera.updateProjectionMatrix();
		renderer.setSize(window.innerWidth, window.innerHeight);
	}

	function animate() {
		starGeo.vertices.forEach(p => {
			p.velocity += p.acceleration
			p.y -= p.velocity;
			if(p.y < -200) {
				p.y = 200;
				p.velocity = 0;
			}
		});
		starGeo.verticesNeedUpdate = true;
		stars.rotation.y += 0.002;
		renderer.render(scene, camera);
		requestAnimationFrame(animate);
	}
	init();
	</script>
	<script>
	</script>
</body>

</html>